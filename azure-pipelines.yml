trigger:
  - main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
- stage: BuildTestAnalyze
  jobs:
  - job: BuildTestAnalyze
    steps:
    - task: UseDotNet@2
      inputs:
        version: '8.0.x'

    - task: JavaToolInstaller@0
      inputs:
        versionSpec: '17'
        jdkArchitectureOption: 'x64'
        jdkSourceOption: 'PreInstalled'
        
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet tool install --global dotnet-coverage
          dotnet-sonarscanner begin /k:"$(SONAR_PROJECT_KEY)" /d:sonar.token="$(SONAR_TOKEN)" /d:sonar.host.url="$(SONAR_HOST_URL)" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
          dotnet build --no-incremental
          dotnet-coverage collect 'dotnet test' -f xml -o 'coverage.xml'
          dotnet-sonarscanner end /d:sonar.token="$(SONAR_TOKEN)"

- stage: BuildAndPushImage
  dependsOn: BuildTestAnalyze
  jobs:
  - job: DockerBuildPush
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      inputs:
        command: login
        containerRegistry: 'myexplorenowwebapp'
        
    - task: Docker@2
      inputs:
        command: buildAndPush
        containerRegistry: 'myexplorenowwebapp'
        repository: '$(DOCKER_USERNAME)/prn231explorenowapi'
        dockerfile: '**/Dockerfile'
        tags: |
          $(Build.BuildId)
          latest

- stage: Deploy
  dependsOn: BuildAndPushImage
  jobs:
  - deployment: DeployToAzureWebApp
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'Production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebAppContainer@1
            inputs:
              azureSubscription: 'myexplorenowwebapp'
              appName: 'be-explore-now'
              containers: '$(DOCKER_REPO)/$(DOCKER_USERNAME)/prn231explorenowapi:$(Build.BuildId)'
              publishProfile: $(AZURE_WEBAPP_PUBLISH_PROFILE)
              
          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: |
                Start-Sleep -Seconds 120
                $healthCheck = Invoke-WebRequest -Uri "https://be-explore-now.azurewebsites.net/health" -UseBasicParsing
                if ($healthCheck.StatusCode -ne 200) {
                  Write-Error "Health check failed with status code $($healthCheck.StatusCode)"
                  exit 1
                }
                
                $deployCheck = Invoke-WebRequest -Uri "https://be-explore-now.azurewebsites.net/swagger/index.html" -UseBasicParsing
                if ($deployCheck.StatusCode -ne 200) {
                  Write-Error "Deployment verification failed with status code $($deployCheck.StatusCode)"
                  exit 1
                }