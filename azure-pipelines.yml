trigger:
  - main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
- stage: BuildTestAnalyze
  jobs:
  - job: BuildTestAnalyze
    steps:
    - task: UseDotNet@2
      inputs:
        version: '8.0.x'
        
    - task: DotNetCoreCLI@2
      displayName: 'Build'
      inputs:
        command: 'build'
        projects: '$(solution)'
        arguments: '--configuration $(buildConfiguration) --no-incremental'

    - task: DotNetCoreCLI@2
      displayName: 'Test'
      inputs:
        command: 'test'
        projects: '$(solution)'
        arguments: '--configuration $(buildConfiguration)'

- stage: BuildAndPushImage
  dependsOn: BuildTestAnalyze
  jobs:
  - job: DockerBuildPush
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'myexplorenowwebapp'
        repository: 'prn231explorenowapi'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: |
          $(Build.BuildId)
          latest

- stage: Deploy
  dependsOn: BuildAndPushImage
  jobs:
  - deployment: DeployToAzureWebApp
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebAppContainer@1
            inputs:
              azureSubscription: 'myexplorenowwebapp'
              appName: 'be-explore-now'
              containers: 'myexplorenowwebapp.azurecr.io/prn231explorenowapi:$(Build.BuildId)'
              
          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: |
                Start-Sleep -Seconds 120
                $healthCheck = Invoke-WebRequest -Uri "https://be-explore-now.azurewebsites.net/health" -UseBasicParsing
                if ($healthCheck.StatusCode -ne 200) {
                  Write-Error "Health check failed with status code $($healthCheck.StatusCode)"
                  exit 1
                }
                
                $deployCheck = Invoke-WebRequest -Uri "https://be-explore-now.azurewebsites.net/swagger/index.html" -UseBasicParsing
                if ($deployCheck.StatusCode -ne 200) {
                  Write-Error "Deployment verification failed with status code $($deployCheck.StatusCode)"
                  exit 1
                }